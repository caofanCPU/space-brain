// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户模型
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  licenses      License[]
}

// NextAuth 账户模型
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// NextAuth 会话模型
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// 产品模型
model Product {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  description String
  features    Json
  imageUrl    String?
  price       Float?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  licenses    License[]
  versions    ProductVersion[]
}

// 产品版本模型
model ProductVersion {
  id          String   @id @default(cuid())
  version     String
  releaseDate DateTime
  changelog   String
  downloadUrl String
  productId   String
  product     Product  @relation(fields: [productId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// 许可证模型
model License {
  id         String      @id @default(cuid())
  key        String      @unique
  type       LicenseType
  validUntil DateTime?
  userId     String
  user       User        @relation(fields: [userId], references: [id])
  productId  String
  product    Product     @relation(fields: [productId], references: [id])
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

// 博客文章模型
model BlogPost {
  id        String   @id @default(cuid())
  title     String
  slug      String   @unique
  content   String   @db.Text
  excerpt   String?
  imageUrl  String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// 枚举类型
enum Role {
  USER
  ADMIN
}

enum LicenseType {
  TRIAL
  PERSONAL
  PROFESSIONAL
  ENTERPRISE
} 